---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import Footer from '../../components/Footer.astro';

const allPosts = await getCollection('blog');
const sortedPosts = allPosts.sort((a, b) =>
  new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);

const categories = [...new Set(allPosts.map(post => post.data.category))];
---

<Layout title="Blog | Skyabove" description="Insights, trends, and strategies for AI-powered marketing. Learn how to transform your business with artificial intelligence.">
  <Navigation />

  <section class="blog-hero">
    <div class="container">
      <div class="hero-content">
        <h1 class="hero-title">
          <span class="title-line">AI Marketing</span>
          <span class="title-line"><span class="gradient-text">Insights</span> & Strategies</span>
        </h1>
        <p class="hero-description">
          Stay ahead of the curve with expert insights on AI-powered marketing, automation, and growth strategies.
        </p>
      </div>
    </div>
  </section>

  <section class="blog-listing">
    <div class="container">
      <div class="filter-bar">
        <div class="categories-filter">
          <button class="category-btn active" data-category="all">All Posts</button>
          {categories.map((category) => (
            <button class="category-btn" data-category={category}>{category}</button>
          ))}
        </div>
      </div>

      <div class="posts-grid">
        {sortedPosts.map((post) => (
          <article class="post-card" data-category={post.data.category}>
            <a href={`/blog/${post.slug}`} class="post-link">
              <div class="post-card-header">
                <span class="post-category">{post.data.category}</span>
                <span class="post-date">
                  {new Date(post.data.pubDate).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric'
                  })}
                </span>
              </div>
              <h2 class="post-card-title">{post.data.title}</h2>
              <p class="post-card-description">{post.data.description}</p>
              <div class="post-card-footer">
                <div class="author-info">
                  <div class="author-avatar">
                    {post.data.author.split(' ').map(n => n[0]).join('')}
                  </div>
                  <span class="author-name">{post.data.author}</span>
                </div>
                <span class="read-more">Read article →</span>
              </div>
              <div class="post-tags">
                {post.data.tags.slice(0, 3).map((tag) => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
            </a>
          </article>
        ))}
      </div>
    </div>
  </section>

  <section class="blog-cta">
    <div class="container">
      <div class="cta-content">
        <h2>Ready to Transform Your Marketing?</h2>
        <p>Don't just read about AI marketing—experience it. Let's discuss how Skyabove can help your business grow.</p>
        <a href="/#contact" class="btn btn-primary">Get Started</a>
      </div>
    </div>
  </section>

  <Footer />
</Layout>

<script>
  // Category filtering
  const categoryBtns = document.querySelectorAll('.category-btn');
  const postCards = document.querySelectorAll('.post-card');

  categoryBtns.forEach(btn => {
    btn.addEventListener('click', () => {
      const category = btn.getAttribute('data-category');

      // Update active state
      categoryBtns.forEach(b => b.classList.remove('active'));
      btn.classList.add('active');

      // Filter posts
      postCards.forEach(card => {
        const postCategory = card.getAttribute('data-category');

        if (category === 'all' || postCategory === category) {
          (card as HTMLElement).style.display = 'block';
          setTimeout(() => {
            card.classList.add('visible');
          }, 10);
        } else {
          card.classList.remove('visible');
          setTimeout(() => {
            (card as HTMLElement).style.display = 'none';
          }, 300);
        }
      });
    });
  });

  // Initial animation
  document.addEventListener('DOMContentLoaded', () => {
    postCards.forEach((card, index) => {
      setTimeout(() => {
        card.classList.add('visible');
      }, index * 100);
    });
  });
</script>

<style>
  .blog-hero {
    min-height: 50vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding-top: 120px;
    padding-bottom: 4rem;
    background: linear-gradient(180deg, var(--bg-darker) 0%, var(--bg-dark) 100%);
    position: relative;
    overflow: hidden;
  }

  .blog-hero::before {
    content: '';
    position: absolute;
    width: 500px;
    height: 500px;
    background: radial-gradient(circle, rgba(99, 102, 241, 0.15) 0%, transparent 70%);
    top: -10%;
    right: -10%;
    border-radius: 50%;
    filter: blur(80px);
  }

  .hero-content {
    text-align: center;
    max-width: 800px;
    margin: 0 auto;
    position: relative;
    z-index: 1;
  }

  .hero-title {
    font-size: 3.5rem;
    font-weight: 900;
    line-height: 1.1;
    margin-bottom: 1.5rem;
    letter-spacing: -0.02em;
  }

  .title-line {
    display: block;
  }

  .hero-description {
    font-size: 1.25rem;
    color: var(--text-secondary);
    line-height: 1.6;
  }

  .blog-listing {
    padding: 5rem 0;
    background: var(--bg-dark);
  }

  .filter-bar {
    margin-bottom: 3rem;
    display: flex;
    justify-content: center;
  }

  .categories-filter {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    justify-content: center;
  }

  .category-btn {
    background: rgba(255, 255, 255, 0.03);
    border: 1px solid var(--border-color);
    color: var(--text-secondary);
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .category-btn:hover {
    background: rgba(99, 102, 241, 0.1);
    border-color: var(--primary-color);
    color: var(--primary-light);
  }

  .category-btn.active {
    background: var(--gradient-1);
    border-color: transparent;
    color: white;
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 2rem;
  }

  .post-card {
    background: rgba(255, 255, 255, 0.03);
    border: 1px solid var(--border-color);
    border-radius: 16px;
    padding: 2rem;
    transition: all 0.3s ease;
    opacity: 0;
    transform: translateY(20px);
  }

  .post-card.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .post-card:hover {
    transform: translateY(-5px);
    border-color: var(--primary-color);
    background: rgba(99, 102, 241, 0.05);
    box-shadow: 0 20px 40px rgba(99, 102, 241, 0.2);
  }

  .post-link {
    text-decoration: none;
    color: inherit;
  }

  .post-card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .post-category {
    background: rgba(99, 102, 241, 0.1);
    color: var(--primary-light);
    padding: 0.4rem 0.8rem;
    border-radius: 6px;
    font-size: 0.85rem;
    font-weight: 600;
    border: 1px solid rgba(99, 102, 241, 0.2);
  }

  .post-date {
    font-size: 0.85rem;
    color: var(--text-muted);
  }

  .post-card-title {
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    line-height: 1.3;
    color: var(--text-primary);
  }

  .post-card-description {
    color: var(--text-secondary);
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }

  .post-card-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 1.5rem;
    border-top: 1px solid var(--border-color);
    margin-bottom: 1rem;
  }

  .author-info {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .author-avatar {
    width: 35px;
    height: 35px;
    border-radius: 50%;
    background: var(--gradient-1);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 700;
    font-size: 0.85rem;
  }

  .author-name {
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--text-secondary);
  }

  .read-more {
    color: var(--primary-light);
    font-weight: 600;
    font-size: 0.9rem;
  }

  .post-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    background: rgba(255, 255, 255, 0.05);
    color: var(--text-muted);
    padding: 0.25rem 0.6rem;
    border-radius: 4px;
    font-size: 0.8rem;
    border: 1px solid var(--border-color);
  }

  .blog-cta {
    padding: 5rem 0;
    background: linear-gradient(180deg, var(--bg-dark) 0%, var(--bg-darker) 100%);
  }

  .cta-content {
    background: var(--gradient-1);
    border-radius: 20px;
    padding: 4rem;
    text-align: center;
    max-width: 800px;
    margin: 0 auto;
  }

  .cta-content h2 {
    font-size: 2.5rem;
    font-weight: 800;
    margin-bottom: 1rem;
  }

  .cta-content p {
    font-size: 1.25rem;
    margin-bottom: 2rem;
    opacity: 0.95;
  }

  .cta-content .btn {
    background: white;
    color: var(--bg-darker);
  }

  .cta-content .btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
  }

  @media (max-width: 1024px) {
    .hero-title {
      font-size: 2.5rem;
    }

    .posts-grid {
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    }
  }

  @media (max-width: 768px) {
    .hero-title {
      font-size: 2rem;
    }

    .hero-description {
      font-size: 1.1rem;
    }

    .posts-grid {
      grid-template-columns: 1fr;
    }

    .categories-filter {
      gap: 0.5rem;
    }

    .category-btn {
      padding: 0.6rem 1rem;
      font-size: 0.9rem;
    }

    .cta-content {
      padding: 2.5rem 1.5rem;
    }

    .cta-content h2 {
      font-size: 1.75rem;
    }

    .cta-content p {
      font-size: 1.1rem;
    }
  }
</style>
